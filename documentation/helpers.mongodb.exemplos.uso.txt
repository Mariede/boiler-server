/*
LIB db.js (MongoDB)
-------------------

Conexão e execução de comandos noSql em mongoDB

É preciso configurar previamente os esquemas mongoose em /src/models/mongooseSchemas.js
*/

// ---------------------------------------------------------------------------------------------------------
// Parâmetros de entrada (exemplos)

// Insert / Select
const dbCon = require('@serverRoot/helpers/db');

try {
	let userTypes = await dbCon.mongoDB.noSqlExecute('types');

	// await userTypes.deleteMany({
	// 	type: /^[ ]*Alpha/i
	// });

	await userTypes.create(
		{
			type: 'Alpha'
		}
	);

	return userTypes.find();
} catch(err) {
	throw Error(err);
}

// Insert / Select (com integridade referencial)
// Retorno com populate (model "types" instanciado no metodo noSqlGetIds)
const dbCon = require('@serverRoot/helpers/db');

try {
	let userModel = await dbCon.mongoDB.noSqlExecute('users');

	// await userModel.deleteMany({
	// 	name: /^[ ]*joaquim/i
	// });

	await userModel.create(
		{
			name: 'Joaquim Silva',
			email: '   joaquim.silva@email.com   ',
			age: 29,
			pass: '$#$#$565611',
			salt: '12345111',
			active: true,
			type: await dbCon.mongoDB.noSqlGetIds({ type: 'Alpha' }, 'types')
		}
	);

	return userModel.find().populate('type');
} catch(err) {
	throw Error(err);
}

// Update / Select
// Retorno sem populate
const dbCon = require('@serverRoot/helpers/db');

try {
	let userModel = await dbCon.mongoDB.noSqlExecute('users');

	await userModel.findOneAndUpdate(
		{
			name: /^[ ]*joaquim/i
		},
		{
			name: 'Joaquim Santos'
		}
	);

	return userModel.find();
} catch(err) {
	throw Error(err);
}

// Update / Select
// Retorno com populate
const dbCon = require('@serverRoot/helpers/db');

try {
	let userTypes = await dbCon.mongoDB.noSqlExecute('types'),
		userModel = await dbCon.mongoDB.noSqlExecute('users');

	await userModel.findOneAndUpdate(
		{
			name: /^[ ]*joaquim/i
		},
		{
			name: 'Joaquim Santos Silva'
		}
	);

	return userModel.find().populate({ path: 'type', model: userTypes });
} catch(err) {
	throw Error(err);
}

// Delete / Select
// Retorno sem populate
const dbCon = require('@serverRoot/helpers/db');

try {
	let userTypes = await dbCon.mongoDB.noSqlExecute('types'),
		userModel = await dbCon.mongoDB.noSqlExecute('users');

	await userTypes.deleteMany({
		type: /^[ ]*Alpha/i
	});

	await userModel.deleteMany({
		name: /^[ ]*joaquim/i
	});

	return userModel.find();
} catch(err) {
	throw Error(err);
}
// ---------------------------------------------------------------------------------------------------------
