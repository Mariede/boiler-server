LIB email.js + uploader.js
==========================

Envio de e-mails com anexos, e-mails com templates din√¢micos


// ---------------------------------------------------------------------------------------------------------
// Exemplo de uso

const ejs = require('ejs');
const email = require('@serverRoot/helpers/email');
const uploader = require('@serverRoot/helpers/uploader');

const mailTemplate = __serverRoot + '/views/serverSide/pages/_mailTemplates/exampleTemplate.ejs';
const dataTemplate = await ejs.renderFile(mailTemplate, { tableHeader: 'TABLE HEADER!!' }); // Template dinamico
const fileName = 'emailAttach'; // Nome do campo html que informa os arquivos de upload
const filePath = 'attachments_path'; // Caminho para os arquivos de upload
const uploaderResults = await uploader.push(req, res, [{ name: fileName }], filePath);
const attachments = email.getAttachments(uploaderResults, fileName);

return await email.sendEmail (
	['testefrom@server.com', 'From Name'],
	[
		['testeto1@server.com', 'To 1'],
		['testeto2@server.com'],
		['testeto3@server.com', 'To 3'],
		['testeto4@server.com', 'To 4'],
		['testeto5@server.com'],
		['testeto6@server.com']
	],
	[
		['testecc1@server.com', 'Cc 1'],
		['testecc2@server.com'],
		['testecc3@server.com']
	],
	[
		['testebcc1@server.com', 'Bcc 1']
	],
	'teste de envio - subject',
	dataTemplate,
	attachments,
	{ cc: 2, inheritTo: true }
);

/* * utilizar verbo POST * */
// ---------------------------------------------------------------------------------------------------------
