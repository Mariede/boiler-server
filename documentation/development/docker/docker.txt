DOCKER COM WSL2:
---------------

- Windows 10 PRO/ENTERPRISE 64-bit, 1909 ou superior
- Hyper-V habilitado
- WSL habilitado (Subsistema do Windows para Linux)
- VMP habilitado (Plataforma de máquina virtual)
- Atualizar o kernel do Linux (https://docs.microsoft.com/pt-br/windows/wsl/wsl2-kernel)
- Rodar wsl --set-default-version 2 (PS modo admin - desabilitar opção console herdado, se necessário)
- Instalar o Docker Desktop


- Pasta do host para mount dos volumes: C:/users/mariede/.docker/


CONFIGURAÇÃO:
------------

1) Criação da Imagem via Dockerfile (nome da imagem: boiler-deploy, versao do exemplo: 1.0.0):

docker build -t boiler-deploy:1.0.0 ./


2) Container a partir da imagem criada (validar arquivos de configuração da aplicação na imagem):

docker run -d -p 80:4000 -p 443:5000 -p 5001:5001 --name boiler-server --restart always --memory 8192m `
-v C:/Users/mariede/.docker/_web/boiler-server/logs:/home/node/app/logs `
-v C:/Users/mariede/.docker/_web/boiler-server/queue:/home/node/app/queue `
-v C:/Users/mariede/.docker/_web/boiler-server/sessions:/home/node/app/sessions `
-v C:/Users/mariede/.docker/_web/boiler-server/uploads:/home/node/app/uploads `
boiler-deploy:1.0.0


3) Para inspecionar as configurações do container criado:

docker container inspect boiler-server


4) Para atualizar um arquivo do host diretamente dentro do container (supondo estar na pasta build):

docker cp ./config.json boiler-server:home/node/app
docker cp ./views/client-side/public/config.json boiler-server:home/node/app/views/client-side/public


5) Para visualizar networks do docker

docker network ls


6) Para criar nova rede

docker network create --driver bridge --subnet=192.160.0.0/24 --gateway=192.160.0.1 my-network


7) Para remover uma rede

docker network rm my-network


8) Para salvar uma image localmente

docker save -o ./image.tar image-name:tag


9) Para subir a imagem em um registry remoto

docker push image-name:tag


PORTAINER:
---------

1) Imagem + Container:

docker run -d -p 9000:9000 --name portainer --restart always `
-v /var/run/docker.sock:/var/run/docker.sock `
-v C:/users/mariede/.docker/portainer/data:/data `
portainer/portainer-ce:alpine


BANCO DE DADOS:
--------------

1) Imagem + Container (com variaveis de ambiente configuradas):

docker run -d -p 1433:1433 --name mssql `
-v C:/users/mariede/.docker/_db/mssql-boiler-server/data:/var/opt/mssql/data `
-v C:/users/mariede/.docker/_db/mssql-boiler-server/log:/var/opt/mssql/log `
-v C:/users/mariede/.docker/_db/mssql-boiler-server/secrets:/var/opt/mssql/secrets `
-v C:/users/mariede/.docker/_db/mssql-boiler-server/backups:/var/backups `
-e 'ACCEPT_EULA=Y' `
-e 'MSSQL_SA_PASSWORD=A12345678a' `
-e 'MSSQL_PID=Express' `
-e 'MSSQL_LCID=1046' `
-e 'MSSQL_COLLATION=Latin1_General_CI_AI' `
-e 'MSSQL_TCP_PORT=1433' `
-e 'TZ=America/Sao_Paulo' `
-e 'MSSQL_BACKUP_DIR=/var/backups' `
-e 'MSSQL_DATA_DIR=/var/opt/mssql/data/user' `
-e 'MSSQL_LOG_DIR=/var/opt/mssql/data/user' `
-e 'MSSQL_AGENT_ENABLED=false' `
mcr.microsoft.com/mssql/server:2019-latest
