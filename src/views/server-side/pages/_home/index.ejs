<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<meta name="theme-color" content="#000000" />

		<title>Servidor em NODE.js</title>

		<link rel="shortcut icon" href="img/favicon.ico" />
		<link rel="stylesheet" href="css/pages-style.css" type="text/css" />

		<script type="text/javascript" src="https://cdn.socket.io/socket.io-3.0.3.min.js"></script>

		<script type="text/javascript">
			const formatServerUptime = seconds => {
				const pad = s => {
					return (s < 10 ? '0' : '') + s;
				};

				var hours = Math.floor(seconds / (60 * 60));
				var minutes = Math.floor(seconds % (60 * 60) / 60);
				var seconds = Math.floor(seconds % 60);

				return pad(hours) + ':' + pad(minutes) + ':' + pad(seconds);
			};

			const ioConnection = () => {
				const dateShow = (connected, ...data) => {
					const el = document.getElementById('panel-home-date');

					if (connected) {
						el.innerHTML = `${data} h`;
						el.style.color = '';
					} else {
						el.style.color = 'red';
					}
				};

				const serverUptimeShow = connected => {
					const el = document.getElementById('server-uptime-show');

					if (serverUpTime === -1) {
						el.innerHTML = '(por favor, recarregue a página...)';
					} else {
						if (connected) {
							el.innerHTML = `${formatServerUptime(++serverUpTime)} h`;
							el.style.color = '';
						} else {
							serverUpTime = -1;
							el.style.color = 'red';
						}
					}
				};

				const socket = io.connect('<%= ioUrl %>', { path: '<%= ioPath %>', transports: ['websocket', 'polling'], forceNew: true });

				socket.on(
					'serverTimeTick',
					data => {
						dateShow(true, data);
						serverUptimeShow(true);
					}
				);

				socket.on(
					'connect',
					() => {
						socket.emit('serverTimeStart');
					}
				);

				socket.on(
					'disconnect',
					() => {
						dateShow(false);
						serverUptimeShow(false);
					}
				);
			};

			ioConnection();

			let serverUpTime = <%= server.uptime %>;

			// Valor inicial formatado
			const serverUptimeStart = () => {
				const el = document.getElementById('server-uptime-show');
				el.innerHTML = `${formatServerUptime(serverUpTime)} h`;
			};
		</script>
	</head>
	<body onload="serverUptimeStart()">
		<div id="wrapper">
			<div id="content">
				<img id="logo-img" src="img/server-logo.png" alt="logo" />
				<h2>Bem vindo, servidor em Express NODE.js</h2>
			</div>

			<hr />

			<em><%= (server.name ? `${server.name}, ` : '') %>versão <strong><%= (server.version || 'N/D') %></strong></em>

			<br />

			<em>Servidor ativo durante <strong><span id="server-uptime-show" /></strong></em>

			<div class="panel panel-home-bottom">
				Hora do servidor : <span id="panel-home-date"><%= date %> h</span>
			</div>
		</div>
	</body>
</html>
